---

#########################################################
## Sonatype Nexus repositories module                  ##
#########################################################

# Validate global variables
- name: Validate global variables for Sonaytype Nexus repositories module.
  ansible.builtin.assert:
    that: "{{ varitem }} is defined"
    fail_msg: "Required variable '{{ varitem }}' has not been provided."
    quiet: true
  loop_control:
    loop_var: varitem
  loop: 
    - nexus_repository_address
    - nexus_repository_username
    - nexus_repository_password

#########################################################
## Get repository                                      ##
#########################################################

- name: Get repository
  when: action == "get_repository"
  block:

    # Validate local variables
    - name: Validate local variables for Nexus Repository get_repository action.
      ansible.builtin.assert:
        that: "{{ varitem }} is defined"
        fail_msg: "Required variable '{{ varitem }}' has not been provided."
        quiet: true
      loop_control:
        loop_var: varitem
      loop: 
        - nexus_repository_name
        - nexus_repository_type

    # Show information message
    - name: This part is not (yet) implemented.
      ansible.builtin.debug:
        msg: "This part is not (yet) implemented."

    # Stop playbook
    - name: Stop playbook
      ansible.builtin.meta: end_play

#########################################################
## Create repository                                   ##
#########################################################

- name: Create repository
  when:
   - action == "create_repository"
   - nexus_repository_type == "raw"
  block:

    # Validate local variables
    - name: Validate local variables for Sonatype Nexus repositories module.
      ansible.builtin.assert:
        that: "{{ varitem }} is defined"
        fail_msg: "Required variable '{{ varitem }}' has not been provided."
        quiet: true
      loop_control:
        loop_var: varitem
      loop: 
        - nexus_repository_name
        - nexus_repository_type

    # Create blob store in Nexus Repository Manager via API
    - name: "Create blob store for repository '{{ nexus_repository_name }}'"
      ansible.builtin.uri:
        url: "{{ nexus_repository_address }}/service/rest/v1/blobstores/file"  
        method: POST
        status_code: 204
        user: "{{ nexus_repository_username }}"
        password: "{{ nexus_repository_password }}"
        force_basic_auth: yes
        body_format: json
        body: 
          softquota: "{ type: 'spaceRemainingQuota', limit: 0 }"
          path     : "blobs/{{ nexus_repository_name }}"
          name     : "{{ nexus_repository_name }}"
        headers:
          accept: application/json
          Content-Type: application/json   
 
    # Create repository in Nexus Repository Manager via API
    - name: "Create repository '{{ nexus_repository_name }}'"
      ansible.builtin.uri:
        url: "{{ nexus_repository_address }}/service/rest/v1/repositories/raw/hosted"  
        method: POST
        status_code: 201
        user: "{{ nexus_repository_username }}"
        password: "{{ nexus_repository_password }}"
        force_basic_auth: yes
        body_format: json
        body: 
          name      : "{{ nexus_repository_name }}"
          online    : true
          storage   : { blobStoreName: "{{ nexus_repository_name }}", strictContentTypeValidation: true, writePolicy: "allow_once" }
          cleanup   : { policyNames: [ "string" ] }
          component : { proprietaryComponents: true }
          raw       : { contentDisposition: "attachment"}
        headers:
          accept: application/json
          Content-Type: application/json  

#########################################################
## Destroy repository                                  ##
#########################################################

- name: Destroy repository
  when: action == "destroy_repository"
  block:

    # Validate local variables
    - name: Validate local variables for Nexus Repository destroy_repository action.
      ansible.builtin.assert:
        that: "{{ varitem }} is defined"
        fail_msg: "Required variable '{{ varitem }}' has not been provided."
        quiet: true
      loop_control:
        loop_var: varitem
      loop: 
        - nexus_repository_name
        - nexus_repository_type

    # Stop playbook
    - name: Stop playbook
      ansible.builtin.meta: end_play
