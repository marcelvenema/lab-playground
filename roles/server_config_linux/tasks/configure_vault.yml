---

#########################################################
## Vault module                                        ##
#########################################################

#########################################################
## Pre-Configuration                                   ##
#########################################################

# Validate variables
- name: Validate variables for action.
  ansible.builtin.assert:
    that: "{{ item }} is defined"
    fail_msg: "Required variable '{{ item }}' has not been provided."
    quiet: true
  with_items:
    - vault_address
    - vault_token
    - admin_username
    - admin_password  
    - admin_email
    

#########################################################
## Configuration Vault KV                              ##
#########################################################

# Clear variable, be sure it is not used from a previous run.
- name: Clear variable vault_name
  ansible.builtin.set_fact:
    vault_name: ""
  no_log: true

# Clear variable, be sure it is not used from a previous run.
- name: Clear variable vault_description
  ansible.builtin.set_fact:
    vault_description: ""
  no_log: true

# Create secret engine
- name: Create secret engine
  ansible.builtin.include_role:
    name: vault
    tasks_from: secret_engine.yml
  vars:
    action: create_secret_engine
    vault_name: "{{ ansible_fqdn | replace('.', '-') }}"
    vault_description: "Secrets for {{ ansible_fqdn }}"
    vault_type: "kv"

# Store usernames and passwords in Hashicorp Vault.
- name: "Store {{ ansible_fqdn }} usernames and passwords in Vault"
  ansible.builtin.include_role:
    name: vault
    tasks_from: secrets.yml
  vars:
    action: create_secret
    vault_name: "{{ ansible_fqdn | replace('.', '-') }}"
    secret_name: "{{ ansible_fqdn | replace('.', '-') }}"
    secret_keyvalue: "{ 'admin_username': '{{ admin_username }}', 'admin_password': '{{ admin_password }}', 'admin_email': '{{ admin_email }}' }"

#########################################################
## Configuration Vault PKI                             ##
#########################################################

# Clear variable, be sure it is not used from a previous run.
- name: Clear variable vault_name
  ansible.builtin.set_fact:
    vault_name: ""
  no_log: true

# Clear variable, be sure it is not used from a previous run.
- name: Clear variable vault_description
  ansible.builtin.set_fact:
    vault_description: ""
  no_log: true

# Create secret engine
- name: Create secret engine
  ansible.builtin.include_role:
    name: vault
    tasks_from: secret_engine.yml
  vars:
    action: create_secret_engine
    vault_name: "pki"
    vault_description: "PKI Certificates secrets store"
    vault_type: "pki"

#########################################################
## Create PKI root certificate                         ##
#########################################################

# Create PKI root certificate from Vault
- name: Create PKI root certificate from Vault
  ansible.builtin.include_role:
    name: vault
    tasks_from: certificates.yml
  vars:
    action: create_certificate
    vault_name: "pki"
    pki_name: "{{ ansible_fqdn | replace('.', '-') }}"
    pki_ttl: "87600h"
    pki_max_ttl: "43800h"
    pki_ou: "IT"
    pki_country: "BE"
    pki_province: "Antwerp"
    pki_locality: "Antwerp"
    pki_street_address: "Street 1"
    pki_postal_code: "2000"
    pki_serial_number: "1234567890"
    pki_is_ca: "true"
    pki_key_type: "rsa"
    pki_key_bits: "4096"
    pki_key_usage: "cert_sign,crl_sign"
    pki_ext_key_usage: "server_auth,client_auth"
    pki_server_flag: "true"
    pki_client_flag: "true"
    pki_code_signing_flag: "false"
    pki_email_protection_flag: "false"
    pki_ocsp_signing_flag: "false"
    pki_issuing_certificate_url: "http://{{ ansible_fqdn }}:8200/v1/pki/ca"
    pki_crl_distribution_points: "http://{{ ansible_fqdn }}:8200/v1/pki/crl"
    pki_ttl: "87600h"
    pki_max_ttl: "43800h"

