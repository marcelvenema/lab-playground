---

#########################################################
## Pre-installation                                    ##
#########################################################

# Validate variables
- name: Validate variables for action.
  ansible.builtin.assert:
    that: "{{ item }} is defined"
    fail_msg: "Required variable '{{ item }}' has not been provided."
    quiet: true
  with_items:
    - repository_url
    - semaphore_admin_username
    - semaphore_admin_password
    - semaphore_admin_email

#########################################################
## Pre-installation platform check                     ##
#########################################################

# Gather installed packages
- name: Gather installed packages
  ansible.builtin.package_facts:
    manager: auto

# Override platform check if platform variable is defined.
- name: Override platform check if platform variable is defined.
  ansible.builtin.set_fact:
    platform_check: false
  when: platform is defined

# Set platform if podman is detected
- name: Set platform if podman is detected
  ansible.builtin.set_fact:
    platform: "podman"
  when:
    - platform_check is not defined
    - '"podman" in ansible_facts.packages'

# Set platform if kubernetes is detected
- name: Set platform if kubernetes is detected
  ansible.builtin.set_fact:
    platform: "kubernetes"
  when:
    - platform_check is not defined
    - '"kubernetes" in ansible_facts.packages'

# Set platform to host if no podman or no kubernetes is detected
- name: Set platform to host if no Podman or Kubernetes is detected
  ansible.builtin.set_fact:
    platform: "host"
  when:
    - platform_check is not defined
    - '"podman" not in ansible_facts.packages'
    - '"kubernetes" not in ansible_facts.packages'

#########################################################
## Pre-installation uninstall                          ##
#########################################################

# Check if Semaphore pod is present, if so remove it
- name: Check if Semaphore pod is present
  containers.podman.podman_container_info:
    name: semaphore
  register: semaphore_pod_info
  ignore_errors: true

# Run uninstall if Semaphore pod is present
- name: Run uninstall playbook if Semaphore pod is present
  ansible.builtin.include_tasks: uninstall.yml
  when: semaphore_pod_info is defined

#########################################################
## Pre-installation folders                            ##
#########################################################

# Create Semaphore config folder
- name: Create Semaphore config folder
  ansible.builtin.file:
    path: /data/semaphore/config
    state: directory
    mode: '0755'

# Create Semaphore data folder
- name: Create Semaphore data folder
  ansible.builtin.file:
    path: /data/semaphore/data
    state: directory
    mode: '0755'

#########################################################
## Pre-installation others                             ##
#########################################################

# Create encryption key via lookup
- name: Create encryption key via lookup
  ansible.builtin.set_fact:
    encryption_key_output: "{{ lookup('pipe', 'head -c32 /dev/urandom | base64') }}"

#########################################################
## Installation via podman                             ##
#########################################################

- name: Install Semaphore via podman
  when: platform == "podman"
  block:

    ##################################
    # Import container image         # 
    ##################################

    # Pull image from repository to local image repository. If failed, lookup local image file.
    - name: Pull Semaphore container image from repository
      containers.podman.podman_image:
        name: "{{ repository_url }}"
      register: pull_result
      ignore_errors: true

    # repository_url is a local container file, check if file exists
    - name: Check if repository_url is a local container file
      ansible.builtin.stat:
        path: "{{ repository_url }}"
      register: repository_url_result
      delegate_to: localhost
      when: pull_result is failed

    # Fail if image file not found
    - name: Fail if Semaphore container image file not found
      ansible.builtin.fail:
        msg: "Repository URL {{ repository_url }} not found. Alternate container file location files/semaphore_*.tar not found. Cannot continue..."
      when: 
        - pull_result is failed
        - repository_url_result.stat.exists is not defined

    # Copy image file to destination
    - name: Copy Semaphore container image file to destination
      ansible.builtin.copy:
        src: "{{ repository_url }}"
        dest: "/tmp/semaphore.tar"
        mode: '0644'
      when: pull_result is failed

    # Load image from file if pull failed
    - name: Import Semaphore container image to podman
      ansible.builtin.command: podman load -i /tmp/semaphore.tar
      register: import_result
      when: pull_result is failed

    # Get image info from podman
    - name: Gather info on Semaphore container image
      containers.podman.podman_image_info:
        name: semaphore
      register: image_info_result

    # Get Id from image info
    - name: Get Id from image info
      ansible.builtin.set_fact:
        image_id: "{{ image_info_result.images[0].Id[:12] }}"

    # Cleanup image file
    - name: Cleanup container image file
      ansible.builtin.file:
        path: /tmp/semaphore.tar
        state: absent
      when: pull_result is failed

    ##################################
    # Create Semaphore configuration #
    ##################################


    ##################################
    # Create Semaphore container     #
    ##################################

    # Create Semaphore pod
    - name: Create Semaphore pod
      containers.podman.podman_container:
        name: semaphore
        image: "{{ image_id }}"
        ports:
          - 3000:3000
        volumes:
          - /data/semaphore/data:/opt/data/semaphore:Z
        restart_policy: unless-stopped
        env:
          SEMAPHORE_ADMIN_NAME: "{{ semaphore_admin_username }}"
          SEMAPHORE_ADMIN_PASSWORD: "{{ semaphore_admin_password }}"
          SEMAPHORE_ADMIN_EMAIL: "{{ semaphore_admin_email }}"
          SEMAPHORE_ADMIN: "{{ semaphore_admin_username }}"
          SEMAPHORE_DB_DIALECT: bolt
          SEMAPHORE_PLAYBOOK_PATH: /tmp/semaphore
          SEMAPHORE_ACCESS_KEY_ENCRYPTION: "{{ encryption_key_output }}"

#########################################################
## Installation via kubernetes                         ##
#########################################################

- name: Install Semaphore on Kubernetes
  when: platform == "kubernetes"
  block:

    # Debug message
    - name: Debug message
      ansible.builtin.debug:
        msg: "Install Semaphore via kubernetes"
  
    # Show information message
    - name: This part is not (yet) implemented.
      ansible.builtin.debug:
        msg: "This part is not (yet) implemented."

    # Stop playbook
    - name: Stop playbook
      ansible.builtin.meta: end_play

#########################################################
## Installation on host                                ##
#########################################################

- name: Install Semaphore on host
  when: platform == "host"
  block:

    # Debug message
    - name: Debug message
      ansible.builtin.debug:
        msg: "Install Semaphore on host"
  
    # Show information message
    - name: This part is not (yet) implemented.
      ansible.builtin.debug:
        msg: "This part is not (yet) implemented."

    # Stop playbook
    - name: Stop playbook
      ansible.builtin.meta: end_play

#########################################################
## Configuration                                       ##
#########################################################

# Configure Semaphore
- name: Configure
  ansible.builtin.include_tasks: configure.yml
