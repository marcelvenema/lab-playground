---

#########################################################
## Hashicorp Vault Secrets module                      ##
#########################################################

# Validate global variables for Hashicorp Vault secrets module.
- name: Validate global variables for Hashicorp Vault secrets module.
  assert:
    that: "{{ varitem }} is defined"
    fail_msg: "Required variable '{{ varitem }}' has not been provided."
    quiet: true
  loop_control:
    loop_var: varitem
  loop: 
    - vault_address
    - vault_token

#########################################################
## Get Secret                                          ##
#########################################################

- block:

  # Register var_result variable
  - name: Register var_result variable
    set_fact:
      var_result: "{{ var_result }}"
    no_log: true
    when: var_result is not defined

  # Clear variable var_result, be sure it is not used from a previous run.
  - name: Clear variable var_result
    set_fact:
      var_result: ""
    no_log: true

  # Validate local variables
  - name: Validate variables for Vault get_secret action.
    assert:
      that: "{{ varitem }} is defined"
      fail_msg: "Required variable '{{ varitem }}' has not been provided."
      quiet: true
    loop_control:
      loop_var: varitem
    loop: 
      - vault_name
      - secret_name
      - secret_key
      - var_result

  # Get secret via Vault API.
  - name: Get secret via API
    uri:
      url: "{{ vault_address }}/v1/{{ vault_name }}/data/{{ secret_name }}"
      validate_certs: false 
      method: GET
      headers:
        X-Vault-Token: "{{ vault_token }}"
    register: secret_result

  # Get secret_key value from result and parse into variable from var_result
  - name: Parse secret_key result
    set_fact:
      "{{ var_result }}" : "{{ secret_result.json.data.data[secret_key] }}"


  # TODO error handling

  when: action == "get_secret"

#########################################################
## Create Secret                                       ##
#########################################################

- block:

  # Validate local variables
  - name: Validate variables for Vault create_secret action.
    assert:
      that: "{{ varitem }} is defined"
      fail_msg: "Required variable '{{ varitem }}' has not been provided."
      quiet: true
    loop_control:
      loop_var: varitem
    loop: 
      - vault_name
      - secret_name
      # - secret_keyvalue

  # Create secret via API. Authenticate with vault_token.
  - name: Create secret via API
    uri:
      url: "{{ vault_address }}/v1/{{ vault_name }}/data/{{ secret_name }}"
      validate_certs: false 
      method: POST
      headers:
        X-Vault-Token: "{{ vault_token }}"
      body_format: json
      body: 
        data: "{{ secret_keyvalue }}"
    register: vault_secret
    #no_log: true

  when: action == "create_secret"
 
#########################################################
## Destroy Secret                                      ##
#########################################################

- block:

  # Validate local variables
  - name: Validate variables for Vault destroy_secret action.
    assert:
      that: "{{ varitem }} is defined"
      fail_msg: "Required variable '{{ varitem }}' has not been provided."
      quiet: true
    loop_control:
      loop_var: varitem
    loop: 
      - vault_name
      - secret_name

  # TODO

  # Debug enviroment variables
  - name: Debug enviroment variables
    debug:
     msg: "{{ vault_token }}"

  when: action == "destroy_secret"
