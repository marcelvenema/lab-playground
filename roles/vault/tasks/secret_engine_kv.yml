---

#########################################################
## Hashicorp Vault KV Secret Engine module             ##
#########################################################

#########################################################
## Get KV Secrets engine                               ##
#########################################################

- name: Get Vault KV secret engine
  when: action == 'get_secret_engine'
  block:

    # Register var_result variable
    - name: Register var_result variable
      ansible.builtin.set_fact:
        var_result: "{{ var_result }}"
      no_log: true
      when: var_result is not defined

    # Clear variable var_result, be sure it is not used from a previous run.
    - name: Clear variable var_result
      ansible.builtin.set_fact:
        var_result: ""
      no_log: true

    # Validate local variables
    - name: Validate variables for Vault get_secret_engine action.
      ansible.builtin.assert:
        that: "{{ varitem }} is defined"
        fail_msg: "Required variable '{{ varitem }}' has not been provided."
        quiet: true
      loop_control:
        loop_var: varitem
      loop: 
        - vault_name

    # Get Hashicorp Vault secret engines via API. Authenticate with vault_token.
    - name: Get Hashicorp Vault secret engines via API
      ansible.builtin.uri:
        url: "{{ vault_address }}/v1/sys/mounts"
        method: GET
        headers:
          X-Vault-Token: "{{ vault_token }}"
      register: secret_engines_result
      run_once: true
      no_log: true

    # Find all secret engines with name secret_engine_name. use regex_findall to find all matches. Store result in var_result.
    - name: Get all Vault secret engines with name {{ vault_name }}.
      ansible.builtin.set_fact:
        "{{ var_result }}" : "{{ secret_engines_result.json.data | regex_findall(vault_name) }}"
      no_log: true

#########################################################
## Create KV Secrets engine                            ##
#########################################################

- name: Create Vault KV secret engine
  when: action == 'create_secret_engine'
  block:

  # Validate variables
    - name: Validate variables for Vault create_secret_engine action.
      ansible.builtin.assert:
        that: "{{ varitem }} is defined"
        fail_msg: "Required variable '{{ varitem }}' has not been provided."
        quiet: true
      loop_control:
        loop_var: varitem
      loop: 
        - vault_name
        - vault_description
   
    # Create Hashicorp secrets engine via api. Authenticate with vault_token.
    - name: Create Hashicorp secrets engine via api
      ansible.builtin.uri:
        url: "{{ vault_address }}/v1/sys/mounts/{{ vault_name }}"
        validate_certs: false
        method: POST
        status_code: 204
        headers:
          X-Vault-Token: "{{ vault_token }}"
        body_format: json
        body:
          type: kv
          description: "{{ vault_description }}"
          options:
            version: 2

#########################################################
## Destroy KV Secrets engine                           ##
#########################################################

- name: Destroy Vault KV secret engine
  when: action == 'destroy_secret_engine'
  block:

  # Validate local variables
    - name: Validate variables for Vault destroy_secret_engine action.
      ansible.builtin.assert:
        that: "{{ varitem }} is defined"
        fail_msg: "Required variable '{{ varitem }}' has not been provided."
        quiet: true
      loop_control:
        loop_var: varitem
      loop: 
        - vault_name

    # Destroy Hashicorp secrets engine via api. Authenticate with vault_token.
    - name: "Destroy Hashicorp secrets engine {{ vault_name }}"
      ansible.builtin.uri:
        url: "{{ vault_address }}/v1/sys/mounts/{{ vault_name }}"
        validate_certs: false
        method: DELETE
        status_code: 204
        headers:
          X-Vault-Token: "{{ vault_token }}"
